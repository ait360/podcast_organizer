version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: podcast_web:1
    command: >
      sh -c "python manage.py wait_for_db &&
                     python manage.py makemigrations &&
                     python manage.py migrate &&
                     python manage.py collectstatic &&
                     gunicorn config.wsgi:application --bind 0.0.0.0:8001"
    volumes:
      - static_volume:/podcast/staticfiles
      - media_volume:/podcast/media
    expose:
      - 8001
    restart: always
    env_file:
      - .env.prod
    depends_on:
      - db

  db:
    image: postgres:14.1-alpine
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data_prod/
    env_file:
      - .env.prod
    restart: always

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env.pgadmin
#    ports:
#      - "5050:80"
    expose:
      - 80

  redis:
    image: redis:alpine
    container_name: redis
    restart: always

  # Celery
  celery:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: podcast_celery
    command: celery -A config worker -l INFO
    container_name: celery
    depends_on:
      - db
      - redis
      - web
    env_file:
      - .env.prod

  celery_beat_scheduler:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: podcast_celery_beat
    command: celery -A config beat -l info
    restart: always
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
      - celery
      - web


  nginx:
    build: ./nginx
    ports:
      - 1337:80
    restart: always
    volumes:
      - static_volume:/podcast/staticfiles
      - media_volume:/podcast/media
    depends_on:
      - web



volumes:
#  podcast_prod:/
  postgres_prod_data:
  static_volume:
  media_volume: